/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bkeryah.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Map;

import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.sql.DataSource;

import org.hibernate.SessionFactory;
import org.hibernate.jdbc.Work;
import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.jdbc.datasource.DataSourceUtils;

import com.bkeryah.licences.SpringContext;
import com.bkeryah.service.IDataAccessService;
import com.bkeryah.testssss.BeansManager;
import com.mchange.v2.c3p0.ComboPooledDataSource;

/**
 *
 * @author Ibrahim Darwiesh 10/10/2014
 */
public class DataBaseConnectionClass {

<<<<<<< working copy
//	private static ApplicationContext applicationContext = null;
//
//    public static ApplicationContext getApplicationContext() {
//        return applicationContext;
//    }
//    
//    @Override
//    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
//         this.applicationContext = applicationContext;
//    }
//	private static Connection conn;
//	@Inject
//	private static SessionFactory sessionFactory; // comments removed
//
//	public SessionFactory getSessionFactory() {
//		return sessionFactory;
//	}
//
//	public void setSessionFactory(SessionFactory sessionFactory) {
//		DataBaseConnectionClass.sessionFactory = sessionFactory;
//	}
//	
//	
//	public static Connection findConnection() {
//
//		sessionFactory.openSession().doWork(new Work() {
//			private Connection conn;
//
//			@Override
//			public void execute(Connection connection) throws SQLException {
//				setConn(connection);
//			}
//
//			public Connection getConn() {
//				return conn;
//			}
//
//			public void setConn(Connection conn) {
//				this.conn = conn;
//			}
//		});
//		return conn;
//	}
    public static Connection getConnection() {
        Connection conn = null;
//        conn = findConnection();
//        DataSource ds = (DataSource)BeansManager.getBean("DataSource");
//        try {
//			conn = ds.getConnection();
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            conn = DriverManager.getConnection(
                    "jdbc:oracle:thin:@10.27.9.24:1521:orcl002", "project", "oraserverdb200");
            conn.setAutoCommit(false);
=======
	private static ApplicationContext applicationContext;
	private static com.mchange.v2.c3p0.ComboPooledDataSource dataSource;
	static {
		applicationContext = SpringContext.getApplicationContext();
>>>>>>> destination

	}

	public static Connection getConnection() {
		Connection conn = null;
		try {
			dataSource = (ComboPooledDataSource) applicationContext.getBean("DataSource");
			conn = dataSource.getConnection();

		} catch (Exception e) {
			System.err.println("CRITICAL :::: ERROR GETTING DATABASE CONNECTION" + e.getMessage());

		}
		return conn;
	}

	public static ApplicationContext getApplicationContext() {
		return applicationContext;
	}

	public static void setApplicationContext(ApplicationContext applicationContext) {
		DataBaseConnectionClass.applicationContext = applicationContext;
	}
}
